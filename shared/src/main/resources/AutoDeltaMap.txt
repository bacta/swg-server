"mapType","mapImpl","iteratorType","iteratorAccessor","generic","genericClass","genericCommand","keyName","keyType","keySerializer","keyDeserializer","keyCreator","valueName","valueType","valueSerializer","valueDeserializer","valueCreator","containerForEachStart","containerForEachEnd"
"TByteByteMap","TByteByteHashMap","TByteByteIterator",".iterator()","","","","Bool","boolean","BufferUtil.put(buffer, key)","buffer.get() != 0","","Bool","boolean","BufferUtil.put(buffer, value)","BufferUtil.getBoolean(buffer)","","container.forEachEntry((key, value) -> {","return true; });"
"TByteByteMap","TByteByteHashMap","TByteByteIterator",".iterator()","","","","Bool","boolean","BufferUtil.put(buffer, key)","buffer.get() != 0","","Byte","byte","BufferUtil.put(buffer, value)","buffer.get()","","container.forEachEntry((key, value) -> {","return true; });"
"TByteShortMap","TByteShortHashMap","TByteShortIterator",".iterator()","","","","Bool","boolean","BufferUtil.put(buffer, key)","buffer.get() != 0","","Short","short","BufferUtil.put(buffer, value)","buffer.getShort()","","container.forEachEntry((key, value) -> {","return true; });"
"TByteIntMap","TByteIntHashMap","TByteIntIterator",".iterator()","","","","Bool","boolean","BufferUtil.put(buffer, key)","buffer.get() != 0","","Int","int","BufferUtil.put(buffer, value)","buffer.getInt()","","container.forEachEntry((key, value) -> {","return true; });"
"TByteLongMap","TByteLongHashMap","TByteLongIterator",".iterator()","","","","Bool","boolean","BufferUtil.put(buffer, key)","buffer.get() != 0","","Long","long","BufferUtil.put(buffer, value)","buffer.getLong()","","container.forEachEntry((key, value) -> {","return true; });"
"TByteFloatMap","TByteFloatHashMap","TByteFloatIterator",".iterator()","","","","Bool","boolean","BufferUtil.put(buffer, key)","buffer.get() != 0","","Float","float","BufferUtil.put(buffer, value)","buffer.getFloat()","","container.forEachEntry((key, value) -> {","return true; });"
"TByteObjectMap","TByteObjectHashMap","TByteObjectIterator",".iterator()","<String>","","","Bool","boolean","BufferUtil.put(buffer, key)","buffer.get() != 0","","String","String","BufferUtil.put(buffer, value)","BufferUtil.getAscii(buffer)","","container.forEachEntry((key, value) -> {","return true; });"
"TByteObjectMap","TByteObjectHashMap","TByteObjectIterator",".iterator()","<V>","<V extends ByteBufferWritable>","<V>","Bool","boolean","BufferUtil.put(buffer, key)","buffer.get() != 0","","Object","V","value.writeToBuffer(buffer)","valueCreator.apply(buffer)","Function<ByteBuffer, V> valueCreator","container.forEachEntry((key, value) -> {","return true; });"
"TByteByteMap","TByteByteHashMap","TByteByteIterator",".iterator()","","","","Byte","byte","BufferUtil.put(buffer, key)","buffer.get()","","Bool","boolean","BufferUtil.put(buffer, value)","BufferUtil.getBoolean(buffer)","","container.forEachEntry((key, value) -> {","return true; });"
"TByteByteMap","TByteByteHashMap","TByteByteIterator",".iterator()","","","","Byte","byte","BufferUtil.put(buffer, key)","buffer.get()","","Byte","byte","BufferUtil.put(buffer, value)","buffer.get()","","container.forEachEntry((key, value) -> {","return true; });"
"TByteShortMap","TByteShortHashMap","TByteShortIterator",".iterator()","","","","Byte","byte","BufferUtil.put(buffer, key)","buffer.get()","","Short","short","BufferUtil.put(buffer, value)","buffer.getShort()","","container.forEachEntry((key, value) -> {","return true; });"
"TByteIntMap","TByteIntHashMap","TByteIntIterator",".iterator()","","","","Byte","byte","BufferUtil.put(buffer, key)","buffer.get()","","Int","int","BufferUtil.put(buffer, value)","buffer.getInt()","","container.forEachEntry((key, value) -> {","return true; });"
"TByteLongMap","TByteLongHashMap","TByteLongIterator",".iterator()","","","","Byte","byte","BufferUtil.put(buffer, key)","buffer.get()","","Long","long","BufferUtil.put(buffer, value)","buffer.getLong()","","container.forEachEntry((key, value) -> {","return true; });"
"TByteFloatMap","TByteFloatHashMap","TByteFloatIterator",".iterator()","","","","Byte","byte","BufferUtil.put(buffer, key)","buffer.get()","","Float","float","BufferUtil.put(buffer, value)","buffer.getFloat()","","container.forEachEntry((key, value) -> {","return true; });"
"TByteObjectMap","TByteObjectHashMap","TByteObjectIterator",".iterator()","<String>","","","Byte","byte","BufferUtil.put(buffer, key)","buffer.get()","","String","String","BufferUtil.put(buffer, value)","BufferUtil.getAscii(buffer)","","container.forEachEntry((key, value) -> {","return true; });"
"TByteObjectMap","TByteObjectHashMap","TByteObjectIterator",".iterator()","<V>","<V extends ByteBufferWritable>","<V>","Byte","byte","BufferUtil.put(buffer, key)","buffer.get()","","Object","V","value.writeToBuffer(buffer)","valueCreator.apply(buffer)","Function<ByteBuffer, V> valueCreator","container.forEachEntry((key, value) -> {","return true; });"
"TShortByteMap","TShortByteHashMap","TShortByteIterator",".iterator()","","","","Short","short","BufferUtil.put(buffer, key)","buffer.getShort()","","Bool","boolean","BufferUtil.put(buffer, value)","BufferUtil.getBoolean(buffer)","","container.forEachEntry((key, value) -> {","return true; });"
"TShortByteMap","TShortByteHashMap","TShortByteIterator",".iterator()","","","","Short","short","BufferUtil.put(buffer, key)","buffer.getShort()","","Byte","byte","BufferUtil.put(buffer, value)","buffer.get()","","container.forEachEntry((key, value) -> {","return true; });"
"TShortShortMap","TShortShortHashMap","TShortShortIterator",".iterator()","","","","Short","short","BufferUtil.put(buffer, key)","buffer.getShort()","","Short","short","BufferUtil.put(buffer, value)","buffer.getShort()","","container.forEachEntry((key, value) -> {","return true; });"
"TShortIntMap","TShortIntHashMap","TShortIntIterator",".iterator()","","","","Short","short","BufferUtil.put(buffer, key)","buffer.getShort()","","Int","int","BufferUtil.put(buffer, value)","buffer.getInt()","","container.forEachEntry((key, value) -> {","return true; });"
"TShortLongMap","TShortLongHashMap","TShortLongIterator",".iterator()","","","","Short","short","BufferUtil.put(buffer, key)","buffer.getShort()","","Long","long","BufferUtil.put(buffer, value)","buffer.getLong()","","container.forEachEntry((key, value) -> {","return true; });"
"TShortFloatMap","TShortFloatHashMap","TShortFloatIterator",".iterator()","","","","Short","short","BufferUtil.put(buffer, key)","buffer.getShort()","","Float","float","BufferUtil.put(buffer, value)","buffer.getFloat()","","container.forEachEntry((key, value) -> {","return true; });"
"TShortObjectMap","TShortObjectHashMap","TShortObjectIterator",".iterator()","<String>","","","Short","short","BufferUtil.put(buffer, key)","buffer.getShort()","","String","String","BufferUtil.put(buffer, value)","BufferUtil.getAscii(buffer)","","container.forEachEntry((key, value) -> {","return true; });"
"TShortObjectMap","TShortObjectHashMap","TShortObjectIterator",".iterator()","<V>","<V extends ByteBufferWritable>","<V>","Short","short","BufferUtil.put(buffer, key)","buffer.getShort()","","Object","V","value.writeToBuffer(buffer)","valueCreator.apply(buffer)","Function<ByteBuffer, V> valueCreator","container.forEachEntry((key, value) -> {","return true; });"
"TIntByteMap","TIntByteHashMap","TIntByteIterator",".iterator()","","","","Int","int","BufferUtil.put(buffer, key)","buffer.getInt()","","Bool","boolean","BufferUtil.put(buffer, value)","BufferUtil.getBoolean(buffer)","","container.forEachEntry((key, value) -> {","return true; });"
"TIntByteMap","TIntByteHashMap","TIntByteIterator",".iterator()","","","","Int","int","BufferUtil.put(buffer, key)","buffer.getInt()","","Byte","byte","BufferUtil.put(buffer, value)","buffer.get()","","container.forEachEntry((key, value) -> {","return true; });"
"TIntShortMap","TIntShortHashMap","TIntShortIterator",".iterator()","","","","Int","int","BufferUtil.put(buffer, key)","buffer.getInt()","","Short","short","BufferUtil.put(buffer, value)","buffer.getShort()","","container.forEachEntry((key, value) -> {","return true; });"
"TIntIntMap","TIntIntHashMap","TIntIntIterator",".iterator()","","","","Int","int","BufferUtil.put(buffer, key)","buffer.getInt()","","Int","int","BufferUtil.put(buffer, value)","buffer.getInt()","","container.forEachEntry((key, value) -> {","return true; });"
"TIntLongMap","TIntLongHashMap","TIntLongIterator",".iterator()","","","","Int","int","BufferUtil.put(buffer, key)","buffer.getInt()","","Long","long","BufferUtil.put(buffer, value)","buffer.getLong()","","container.forEachEntry((key, value) -> {","return true; });"
"TIntFloatMap","TIntFloatHashMap","TIntFloatIterator",".iterator()","","","","Int","int","BufferUtil.put(buffer, key)","buffer.getInt()","","Float","float","BufferUtil.put(buffer, value)","buffer.getFloat()","","container.forEachEntry((key, value) -> {","return true; });"
"TIntObjectMap","TIntObjectHashMap","TIntObjectIterator",".iterator()","<String>","","","Int","int","BufferUtil.put(buffer, key)","buffer.getInt()","","String","String","BufferUtil.put(buffer, value)","BufferUtil.getAscii(buffer)","","container.forEachEntry((key, value) -> {","return true; });"
"TIntObjectMap","TIntObjectHashMap","TIntObjectIterator",".iterator()","<V>","<V extends ByteBufferWritable>","<V>","Int","int","BufferUtil.put(buffer, key)","buffer.getInt()","","Object","V","value.writeToBuffer(buffer)","valueCreator.apply(buffer)","Function<ByteBuffer, V> valueCreator","container.forEachEntry((key, value) -> {","return true; });"
"TLongByteMap","TLongByteHashMap","TLongByteIterator",".iterator()","","","","Long","long","BufferUtil.put(buffer, key)","buffer.getLong()","","Bool","boolean","BufferUtil.put(buffer, value)","BufferUtil.getBoolean(buffer)","","container.forEachEntry((key, value) -> {","return true; });"
"TLongByteMap","TLongByteHashMap","TLongByteIterator",".iterator()","","","","Long","long","BufferUtil.put(buffer, key)","buffer.getLong()","","Byte","byte","BufferUtil.put(buffer, value)","buffer.get()","","container.forEachEntry((key, value) -> {","return true; });"
"TLongShortMap","TLongShortHashMap","TLongShortIterator",".iterator()","","","","Long","long","BufferUtil.put(buffer, key)","buffer.getLong()","","Short","short","BufferUtil.put(buffer, value)","buffer.getShort()","","container.forEachEntry((key, value) -> {","return true; });"
"TLongIntMap","TLongIntHashMap","TLongIntIterator",".iterator()","","","","Long","long","BufferUtil.put(buffer, key)","buffer.getLong()","","Int","int","BufferUtil.put(buffer, value)","buffer.getInt()","","container.forEachEntry((key, value) -> {","return true; });"
"TLongLongMap","TLongLongHashMap","TLongLongIterator",".iterator()","","","","Long","long","BufferUtil.put(buffer, key)","buffer.getLong()","","Long","long","BufferUtil.put(buffer, value)","buffer.getLong()","","container.forEachEntry((key, value) -> {","return true; });"
"TLongFloatMap","TLongFloatHashMap","TLongFloatIterator",".iterator()","","","","Long","long","BufferUtil.put(buffer, key)","buffer.getLong()","","Float","float","BufferUtil.put(buffer, value)","buffer.getFloat()","","container.forEachEntry((key, value) -> {","return true; });"
"TLongObjectMap","TLongObjectHashMap","TLongObjectIterator",".iterator()","<String>","","","Long","long","BufferUtil.put(buffer, key)","buffer.getLong()","","String","String","BufferUtil.put(buffer, value)","BufferUtil.getAscii(buffer)","","container.forEachEntry((key, value) -> {","return true; });"
"TLongObjectMap","TLongObjectHashMap","TLongObjectIterator",".iterator()","<V>","<V extends ByteBufferWritable>","<V>","Long","long","BufferUtil.put(buffer, key)","buffer.getLong()","","Object","V","value.writeToBuffer(buffer)","valueCreator.apply(buffer)","Function<ByteBuffer, V> valueCreator","container.forEachEntry((key, value) -> {","return true; });"
"TFloatByteMap","TFloatByteHashMap","TFloatByteIterator",".iterator()","","","","Float","float","BufferUtil.put(buffer, key)","buffer.getFloat()","","Bool","boolean","BufferUtil.put(buffer, value)","BufferUtil.getBoolean(buffer)","","container.forEachEntry((key, value) -> {","return true; });"
"TFloatByteMap","TFloatByteHashMap","TFloatByteIterator",".iterator()","","","","Float","float","BufferUtil.put(buffer, key)","buffer.getFloat()","","Byte","byte","BufferUtil.put(buffer, value)","buffer.get()","","container.forEachEntry((key, value) -> {","return true; });"
"TFloatShortMap","TFloatShortHashMap","TFloatShortIterator",".iterator()","","","","Float","float","BufferUtil.put(buffer, key)","buffer.getFloat()","","Short","short","BufferUtil.put(buffer, value)","buffer.getShort()","","container.forEachEntry((key, value) -> {","return true; });"
"TFloatIntMap","TFloatIntHashMap","TFloatIntIterator",".iterator()","","","","Float","float","BufferUtil.put(buffer, key)","buffer.getFloat()","","Int","int","BufferUtil.put(buffer, value)","buffer.getInt()","","container.forEachEntry((key, value) -> {","return true; });"
"TFloatLongMap","TFloatLongHashMap","TFloatLongIterator",".iterator()","","","","Float","float","BufferUtil.put(buffer, key)","buffer.getFloat()","","Long","long","BufferUtil.put(buffer, value)","buffer.getLong()","","container.forEachEntry((key, value) -> {","return true; });"
"TFloatFloatMap","TFloatFloatHashMap","TFloatFloatIterator",".iterator()","","","","Float","float","BufferUtil.put(buffer, key)","buffer.getFloat()","","Float","float","BufferUtil.put(buffer, value)","buffer.getFloat()","","container.forEachEntry((key, value) -> {","return true; });"
"TFloatObjectMap","TFloatObjectHashMap","TFloatObjectIterator",".iterator()","<String>","","","Float","float","BufferUtil.put(buffer, key)","buffer.getFloat()","","String","String","BufferUtil.put(buffer, value)","BufferUtil.getAscii(buffer)","","container.forEachEntry((key, value) -> {","return true; });"
"TFloatObjectMap","TFloatObjectHashMap","TFloatObjectIterator",".iterator()","<V>","<V extends ByteBufferWritable>","<V>","Float","float","BufferUtil.put(buffer, key)","buffer.getFloat()","","Object","V","value.writeToBuffer(buffer)","valueCreator.apply(buffer)","Function<ByteBuffer, V> valueCreator","container.forEachEntry((key, value) -> {","return true; });"
"TObjectByteMap","TObjectByteHashMap","TObjectByteIterator",".iterator()","<String>","","","String","String","BufferUtil.put(buffer, key)","BufferUtil.getAscii(buffer)","","Bool","boolean","BufferUtil.put(buffer, value)","BufferUtil.getBoolean(buffer)","","container.forEachEntry((key, value) -> {","return true; });"
"TObjectByteMap","TObjectByteHashMap","TObjectByteIterator",".iterator()","<String>","","","String","String","BufferUtil.put(buffer, key)","BufferUtil.getAscii(buffer)","","Byte","byte","BufferUtil.put(buffer, value)","buffer.get()","","container.forEachEntry((key, value) -> {","return true; });"
"TObjectShortMap","TObjectShortHashMap","TObjectShortIterator",".iterator()","<String>","","","String","String","BufferUtil.put(buffer, key)","BufferUtil.getAscii(buffer)","","Short","short","BufferUtil.put(buffer, value)","buffer.getShort()","","container.forEachEntry((key, value) -> {","return true; });"
"TObjectIntMap","TObjectIntHashMap","TObjectIntIterator",".iterator()","<String>","","","String","String","BufferUtil.put(buffer, key)","BufferUtil.getAscii(buffer)","","Int","int","BufferUtil.put(buffer, value)","buffer.getInt()","","container.forEachEntry((key, value) -> {","return true; });"
"TObjectLongMap","TObjectLongHashMap","TObjectLongIterator",".iterator()","<String>","","","String","String","BufferUtil.put(buffer, key)","BufferUtil.getAscii(buffer)","","Long","long","BufferUtil.put(buffer, value)","buffer.getLong()","","container.forEachEntry((key, value) -> {","return true; });"
"TObjectFloatMap","TObjectFloatHashMap","TObjectFloatIterator",".iterator()","<String>","","","String","String","BufferUtil.put(buffer, key)","BufferUtil.getAscii(buffer)","","Float","float","BufferUtil.put(buffer, value)","buffer.getFloat()","","container.forEachEntry((key, value) -> {","return true; });"
"Map","HashMap","Iterator",".entrySet().iterator()","<String, String>","","","String","String","BufferUtil.put(buffer, key)","BufferUtil.getAscii(buffer)","","String","String","BufferUtil.put(buffer, value)","BufferUtil.getAscii(buffer)","","container.keySet().stream().forEach(key -> { final String value = container.get(key);","});"
"Map","HashMap","Iterator",".entrySet().iterator()","<String, V>","<V extends ByteBufferWritable>","<V>","String","String","BufferUtil.put(buffer, key)","BufferUtil.getAscii(buffer)","","Object","V","value.writeToBuffer(buffer)","valueCreator.apply(buffer)","Function<ByteBuffer, V> valueCreator","container.keySet().stream().forEach(key -> { final V value = container.get(key);","});"
"TObjectByteMap","TObjectByteHashMap","TObjectByteIterator",".iterator()","<K>","<K extends ByteBufferWritable>","<K>","Object","K","key.writeToBuffer(buffer)","keyCreator.apply(buffer)","Function<ByteBuffer, K> keyCreator","Bool","boolean","BufferUtil.put(buffer, value)","BufferUtil.getBoolean(buffer)","","container.forEachEntry((key, value) -> {","return true; });"
"TObjectByteMap","TObjectByteHashMap","TObjectByteIterator",".iterator()","<K>","<K extends ByteBufferWritable>","<K>","Object","K","key.writeToBuffer(buffer)","keyCreator.apply(buffer)","Function<ByteBuffer, K> keyCreator","Byte","byte","BufferUtil.put(buffer, value)","buffer.get()","","container.forEachEntry((key, value) -> {","return true; });"
"TObjectShortMap","TObjectShortHashMap","TObjectShortIterator",".iterator()","<K>","<K extends ByteBufferWritable>","<K>","Object","K","key.writeToBuffer(buffer)","keyCreator.apply(buffer)","Function<ByteBuffer, K> keyCreator","Short","short","BufferUtil.put(buffer, value)","buffer.getShort()","","container.forEachEntry((key, value) -> {","return true; });"
"TObjectIntMap","TObjectIntHashMap","TObjectIntIterator",".iterator()","<K>","<K extends ByteBufferWritable>","<K>","Object","K","key.writeToBuffer(buffer)","keyCreator.apply(buffer)","Function<ByteBuffer, K> keyCreator","Int","int","BufferUtil.put(buffer, value)","buffer.getInt()","","container.forEachEntry((key, value) -> {","return true; });"
"TObjectLongMap","TObjectLongHashMap","TObjectLongIterator",".iterator()","<K>","<K extends ByteBufferWritable>","<K>","Object","K","key.writeToBuffer(buffer)","keyCreator.apply(buffer)","Function<ByteBuffer, K> keyCreator","Long","long","BufferUtil.put(buffer, value)","buffer.getLong()","","container.forEachEntry((key, value) -> {","return true; });"
"TObjectFloatMap","TObjectFloatHashMap","TObjectFloatIterator",".iterator()","<K>","<K extends ByteBufferWritable>","<K>","Object","K","key.writeToBuffer(buffer)","keyCreator.apply(buffer)","Function<ByteBuffer, K> keyCreator","Float","float","BufferUtil.put(buffer, value)","buffer.getFloat()","","container.forEachEntry((key, value) -> {","return true; });"
"Map","HashMap","Iterator",".entrySet().iterator()","<K, String>","<K extends ByteBufferWritable>","<K>","Object","K","key.writeToBuffer(buffer)","keyCreator.apply(buffer)","Function<ByteBuffer, K> keyCreator","String","String","BufferUtil.put(buffer, value)","BufferUtil.getAscii(buffer)","","container.keySet().stream().forEach(key -> { final String value = container.get(key);","});"
"Map","HashMap","Iterator",".entrySet().iterator()","<K, V>","<K extends ByteBufferWritable, V extends ByteBufferWritable>","<K, V>","Object","K","key.writeToBuffer(buffer)","keyCreator.apply(buffer)","Function<ByteBuffer, K> keyCreator","Object","V","value.writeToBuffer(buffer)","valueCreator.apply(buffer)","Function<ByteBuffer, V> valueCreator","container.keySet().stream().forEach(key -> { final V value = container.get(key);","});"
